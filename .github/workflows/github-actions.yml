name: Nurigil github actions CI/CD

on:
  #  push:
  #    branches: ["develop"]
  pull_request:
    branches: ["develop"]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # Build를 위한 JDK 설치
      - name: 1) Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: 2) make application.yml
        run: |
          cd ./src/main
          [ ! -d "resources" ] && mkdir resources
          cd ./resources
          touch ./application.yml
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      - name: 3)Grant permission
        run: chmod +x ./gradlew

      - name: 4) Build with Gradle
        run: ./gradlew bootJar

      - name: 5) Docker build and push
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: 6) Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo docker stop nurigil-container || true
            sudo docker rm nurigil-container || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}
            sudo docker run -d \
              --name nurigil-container \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e POSTGRES_DEPLOY_DB_USERNAME="${{ secrets.DEPLOY_DB_USERNAME }}" \
              -e POSTGRES_DEPLOY_DB_PW="${{ secrets.DEPLOY_DB_PASSWORD }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}
          
